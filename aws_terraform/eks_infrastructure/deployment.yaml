### SINGLE VERSION DEPLOYMENT
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: my-website
  name: my-website
  namespace: default
spec:
  replicas: 1
  minReadySeconds: 45
  selector:
    matchLabels:
      app: my-website
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: my-website
    spec:
      containers:
      - name: my-website
        image: crepic21/my-website
        imagePullPolicy: IfNotPresent
        ports:
        - name: liveness-port
          containerPort: 80
        resources: #CHANGE
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 500m
            memory: 768Mi #256Mi 
        readinessProbe:
          httpGet:
            path: /
            port: liveness-port
          failureThreshold: 5
          periodSeconds: 10
          initialDelaySeconds: 60
        livenessProbe:
          httpGet:
            path: /
            port: liveness-port
          failureThreshold: 5
          periodSeconds: 10
          initialDelaySeconds: 60
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: Default
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: my-website
  name: my-website
  namespace: default
spec:
  ports:
  - # nodePort: 32210 
    port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: my-website
  sessionAffinity: None
  type: LoadBalancer

### MULTIPLE DEPLOYMENTS, VERSION WILL SWITCH BETWEEN EACH OTHER(refresh the browser to test it)
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   labels:
#     app: hello-world-bsnodejs
#     version: v1
#   name: my-website-v1
#   namespace: default
# spec:
#   replicas: 2
#   minReadySeconds: 45
#   selector:
#     matchLabels:
#       app: my-website
#       version: v1
#   strategy:
#     rollingUpdate:
#       maxSurge: 25%
#       maxUnavailable: 25%
#     type: RollingUpdate
#   template:
#     metadata:
#       labels:
#         app: my-website
#         version: v1
#     spec:
#       containers:
#       - image: crepic21/my-website:0.0.1.RELEASE
#         imagePullPolicy: IfNotPresent
#         name: my-website
#       restartPolicy: Always
#       terminationGracePeriodSeconds: 30
# ---
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   labels:
#     app: my-website
#     version: v2
#   name: my-website-v2
#   namespace: default
# spec:
#   replicas: 2
#   minReadySeconds: 45
#   selector:
#     matchLabels:
#       app: my-website
#       version: v2
#   strategy:
#     rollingUpdate:
#       maxSurge: 25%
#       maxUnavailable: 25%
#     type: RollingUpdate
#   template:
#     metadata:
#       labels:
#         app: my-website
#         version: v2
#     spec:
#       containers:
#       - image: crepic21/my-website:0.0.2.RELEASE
#         imagePullPolicy: IfNotPresent
#         name: my-website
#       restartPolicy: Always
#       terminationGracePeriodSeconds: 30
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   # annotations:
#   #   cloud.google.com/neg: '{"ingress":true}'
#   finalizers:
#   - service.kubernetes.io/load-balancer-cleanup
#   labels:
#     app: my-website
#   name: my-website
#   namespace: default
# spec:
#   allocateLoadBalancerNodePorts: true
#   ports:
#   - nodePort: 32299
#     port: 5000
#     protocol: TCP
#     targetPort: 5000
#   selector:
#     app: my-website
#     # version: v2
#   sessionAffinity: None
#   type: LoadBalancer